### MANAGED BY PUPPET ###

# Nagios Open Manage plugin configuration file
#
# For details, see
# http://folk.uio.no/trondham/software/check_openmanage.html#configuration-file

#
# General section
#

# Check control
# Any keyword to the --check parameter are accepted in the
# configuration file, as "check_KEYWORD". These options take boolean
# values ("true" or "false").  If used together with the --check
# command line option, the command line option will override the
# configuration file, if there is a conflict.  The option
# check_everything is special and turns on all checks. Setting this
# option to "true" will effectively negate any other check options.
# This option corresponds to the -a or --all command line option.
#
# For more information about check control, see
# http://folk.uio.no/trondham/software/check_openmanage.html#check-control
# The following keywords are accepted for check control, listed here with their
# default values:
#   check_storage = true
#   check_memory = true
#   check_fans = true
#   check_power = true
#   check_temp = true
#   check_cpu = true
#   check_voltage = true
#   check_batteries = true
#   check_amperage = true
#   check_intrusion = true
#   check_sdcard = true
#   check_esmhealth = true
#   check_servicetag = true
#   check_esmlog = false
#   check_alertlog = false
#   check_everything = false

# Blacklisting
# For blacklisting the keyword blacklist is used, and the value is a
# string that uses the same syntax as the -b or --blacklist parameter.
# If used together with the -b or --blacklist command line option, the
# two blacklists from the config file and command line are merged
# together.
# For more information about blacklisting, including syntax, see
# http://folk.uio.no/trondham/software/check_openmanage.html#blacklisting
# Example:
#   blacklist = ctrl_fw=all/pdisk=0:0:1

# Timeout
# The plugin timeout can be configured with the timeout keyword. The
# argument is number of seconds and should be a positive integer.  The
# corresponding command line option is -t or --timeout.
# Example:
#   timeout = 60

# Performance data
# Performance data can be turned on in the configuration file with
# performance_data. Accepted values are boolean (TRUE/FALSE) or either
# of the keywords "minimal" and "multiline".
# The corresponding command line option is -p or --perfdata.
# Example:
#   performance_data = true

# Legacy Performance data
# With version 3.7.0, performance data output changed. The new format
# is not compatible with the old format. Users who wish to postpone
# switching to the new performance data API may use this option. This
# option takes a boolean value.
# The corresponding command line option is --legacy-perfdata.
# Example:
#   legacy_performance_data = true

# Temperature unit
# The temperature unit used for reporting, performance data etc. can
# be set with the temperature_unit option. Allowed values are F for
# Fahrenheit, C for Celsius, K for Kelvin and R for Rankine.
# The corresponding command line option is --tempunit. Note that the
# command line option -F or --fahrenheit will override both the
# command line option and the configuration file option.
# Example:
#   temperature_unit = F

# Temperature limits
# Custom temperature limits may be configured with the options
# temp_threshold_warning and temp_threshold_critical. These options
# corresponds to the command line options -w or --warning and -c or
# --critical, respectively. They take the same arguments as the
# command line options.
# Examples:
#   temp_threshold_warning = 0=30/10
#   temp_threshold_critical = 0=35/8

#
# SNMP
#

# Several SNMP related options may be set in the configuration
# file. The configuration file may contain the following SNMP options:

# SNMP community string
# The SNMP community string can be set with snmp_community.
# Corresponding command line option: -C or --community
# Example:
#   snmp_community = mycommunity


# SNMP protocol version
# The SNMP protocol version can be set with snmp_version.
# Corresponding command line option: -P or --protocol
# Example:
#   snmp_version = 2

# SNMP port number
# The remote port number used with SNMP can be set with snmp_port.
# Corresponding command line option: --port
# Example:
#   snmp_port = 161

# Use IPv6 instead of IPv4
# The option snmp_use_ipv6 instructs the plugin to use IPv6 instead of
# IPv4.  This option takes a boolean value.
# Corresponding command line option: -6 or --ipv6
# Example:
#   snmp_use_ipv6 = true

# Use TCP instead of UDP
# The option snmp_use_ipv6 instructs the plugin to use TCP instead of
# UDP.  This option takes a boolean value.
# Corresponding command line option: --tcp
# Example:
#   snmp_use_tcp = true

# Set a custom SNMP object timeout
# The option snmp_timeout sets the timeout (in seconds) of the SNMP
# object in the Net::SNMP perl module. This option takes an integer
# value between 1 and 60
# Corresponding command line option: --snmp-timeout
# Example:
#   snmp_timeout = 5

#
# Output control
#
#

# These options gives some control over the output given by the plugin.

# Include servicetag in alerts
# The option output_servicetag will make the plugin include the
# servers servicetag (serial number) in every alert. This option takes
# a boolean value.  Corresponding command line option: -i or --info
# Example:
#   output_servicetag = true

# Include service state in alerts
# The option output_servicestate will make the plugin include the
# service state in any alerts. This option takes a boolean value.
# Corresponding command line option: -s or --state
# Example:
#   output_servicestate = true

# Include abbreviated service state in alerts
# The option output_servicestate_abbr will make the plugin include the
# abbreviated service state in any alerts. This option takes a boolean
# value.  Corresponding command line option: -S or --short-state
# Example:
#   output_servicestate_abbr = true

# Show system info with alerts
# The option output_sysinfo will make the plugin output some system
# information with alerts. This option takes a boolean value.
# Corresponding command line option: -e or --extinfo
# Example:
#   output_sysinfo = true

# Show blacklistings in OK output
# The option output_blacklist will make the plugin show any
# blacklistings in the OK output. This option takes a boolean value.
# Corresponding command line option: -B or --show-blacklist
# Example:
#   output_blacklist = true

# Verbosity of OK output
# The option output_ok_verbosity lets you adjust how much information
# is shown in the OK output. This option takes a positive integer as
# parameter.
# Corresponding command line option: -o or --ok-info
# Example:
#   output_ok_verbosity = 3

# HTML output
# The output output_html makes the plugin produce HTML output. This
# option takes either a boolean value, or a country or area code.
# Corresponding command line option: -I or --htmlinfo
# Example:
#   output_html = de

# Custom line after alerts
# The option output_post_message lets you specify one line of
# information to be shown after any alerts. This option takes a string
# as parameter.
# For more information about codes and formatting, see
# http://folk.uio.no/trondham/software/check_openmanage.html#custom-line-after-the-alert-s
# Example:
#   output_post_message = OS: %o %r
#   output_post_message = NOTE: Handled in ticket 123456


#
# Hosts specific settings
#

# Any setting from the root section can be altered in host specific
# sections.  The values set in a bracket section will override those
# set in the root section, in case of conflicts.
#
# A section begins with the name of the section in square brackets and
# continues until the next section begins. An example of section with
# two keywords and parameters:
#
# [section]
#     key1 = boolean
#     key2 = string
#
# Normal shell globbing may be used for the section names. This is
# limited to *, ? and []. Some examples:
#
# [192.168.*]  matches e.g. 192.168.10.20
# [192.168.10[34].1] matches 192.168.103.1 and 192.168.104.1
# [login?.example.com] matches e.g. login1.example.com
#
